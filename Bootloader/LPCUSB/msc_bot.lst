   1              		.file	"msc_bot.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	MSCBotReset
  13              	MSCBotReset:
  14              	.LFB2:
  15              		.file 1 "../Bootloader/LPCUSB/msc_bot.c"
   1:../Bootloader/LPCUSB/msc_bot.c **** /*
   2:../Bootloader/LPCUSB/msc_bot.c ****     LPCUSB, an USB device driver for LPC microcontrollers
   3:../Bootloader/LPCUSB/msc_bot.c ****     Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
   4:../Bootloader/LPCUSB/msc_bot.c **** 
   5:../Bootloader/LPCUSB/msc_bot.c ****     This library is free software; you can redistribute it and/or
   6:../Bootloader/LPCUSB/msc_bot.c ****     modify it under the terms of the GNU Lesser General Public
   7:../Bootloader/LPCUSB/msc_bot.c ****     License as published by the Free Software Foundation; either
   8:../Bootloader/LPCUSB/msc_bot.c ****     version 2.1 of the License, or (at your option) any later version.
   9:../Bootloader/LPCUSB/msc_bot.c **** 
  10:../Bootloader/LPCUSB/msc_bot.c ****     This library is distributed in the hope that it will be useful,
  11:../Bootloader/LPCUSB/msc_bot.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../Bootloader/LPCUSB/msc_bot.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:../Bootloader/LPCUSB/msc_bot.c ****     Lesser General Public License for more details.
  14:../Bootloader/LPCUSB/msc_bot.c **** 
  15:../Bootloader/LPCUSB/msc_bot.c ****     You should have received a copy of the GNU Lesser General Public
  16:../Bootloader/LPCUSB/msc_bot.c ****     License along with this library; if not, write to the Free Software
  17:../Bootloader/LPCUSB/msc_bot.c ****     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:../Bootloader/LPCUSB/msc_bot.c **** */
  19:../Bootloader/LPCUSB/msc_bot.c **** 
  20:../Bootloader/LPCUSB/msc_bot.c **** #include <string.h>
  21:../Bootloader/LPCUSB/msc_bot.c **** 
  22:../Bootloader/LPCUSB/msc_bot.c **** #include "type.h"
  23:../Bootloader/LPCUSB/msc_bot.c **** #include <stdio.h>
  24:../Bootloader/LPCUSB/msc_bot.c **** #include "rprintf.h"
  25:../Bootloader/LPCUSB/msc_bot.c **** 
  26:../Bootloader/LPCUSB/msc_bot.c **** #include "usbapi.h"
  27:../Bootloader/LPCUSB/msc_bot.c **** #include "usbdebug.h"
  28:../Bootloader/LPCUSB/msc_bot.c **** 
  29:../Bootloader/LPCUSB/msc_bot.c **** #include "msc_bot.h"
  30:../Bootloader/LPCUSB/msc_bot.c **** #include "msc_scsi.h"
  31:../Bootloader/LPCUSB/msc_bot.c **** 
  32:../Bootloader/LPCUSB/msc_bot.c **** #undef MIN
  33:../Bootloader/LPCUSB/msc_bot.c **** #define MIN(x,y)	((x)<(y)?(x):(y))	/**< MIN */
  34:../Bootloader/LPCUSB/msc_bot.c **** 
  35:../Bootloader/LPCUSB/msc_bot.c **** 
  36:../Bootloader/LPCUSB/msc_bot.c **** typedef struct
  37:../Bootloader/LPCUSB/msc_bot.c **** {
  38:../Bootloader/LPCUSB/msc_bot.c ****     U32     dwCBWSignature;
  39:../Bootloader/LPCUSB/msc_bot.c ****     U32     dwCBWTag;
  40:../Bootloader/LPCUSB/msc_bot.c ****     U32     dwCBWDataTransferLength;
  41:../Bootloader/LPCUSB/msc_bot.c ****     U8      bmCBWFlags;
  42:../Bootloader/LPCUSB/msc_bot.c ****     U8      bCBWLun;
  43:../Bootloader/LPCUSB/msc_bot.c ****     U8      bCBWCBLength;
  44:../Bootloader/LPCUSB/msc_bot.c ****     U8      CBWCB[16];
  45:../Bootloader/LPCUSB/msc_bot.c **** }
  46:../Bootloader/LPCUSB/msc_bot.c **** TCBW;
  47:../Bootloader/LPCUSB/msc_bot.c **** 
  48:../Bootloader/LPCUSB/msc_bot.c **** typedef struct
  49:../Bootloader/LPCUSB/msc_bot.c **** {
  50:../Bootloader/LPCUSB/msc_bot.c ****     U32     dwCSWSignature;
  51:../Bootloader/LPCUSB/msc_bot.c ****     U32     dwCSWTag;
  52:../Bootloader/LPCUSB/msc_bot.c ****     U32     dwCSWDataResidue;
  53:../Bootloader/LPCUSB/msc_bot.c ****     U8      bmCSWStatus;
  54:../Bootloader/LPCUSB/msc_bot.c **** }
  55:../Bootloader/LPCUSB/msc_bot.c **** TCSW;
  56:../Bootloader/LPCUSB/msc_bot.c **** 
  57:../Bootloader/LPCUSB/msc_bot.c **** typedef enum
  58:../Bootloader/LPCUSB/msc_bot.c **** {
  59:../Bootloader/LPCUSB/msc_bot.c ****     eCBW,
  60:../Bootloader/LPCUSB/msc_bot.c ****     eDataOut,
  61:../Bootloader/LPCUSB/msc_bot.c ****     eDataIn,
  62:../Bootloader/LPCUSB/msc_bot.c ****     eCSW,
  63:../Bootloader/LPCUSB/msc_bot.c ****     eStalled
  64:../Bootloader/LPCUSB/msc_bot.c **** }
  65:../Bootloader/LPCUSB/msc_bot.c **** EBotState;
  66:../Bootloader/LPCUSB/msc_bot.c **** 
  67:../Bootloader/LPCUSB/msc_bot.c **** 
  68:../Bootloader/LPCUSB/msc_bot.c **** #define CBW_SIGNATURE   0x43425355
  69:../Bootloader/LPCUSB/msc_bot.c **** #define CSW_SIGNATURE   0x53425355
  70:../Bootloader/LPCUSB/msc_bot.c **** 
  71:../Bootloader/LPCUSB/msc_bot.c **** #define STATUS_PASSED       0x00
  72:../Bootloader/LPCUSB/msc_bot.c **** #define STATUS_FAILED       0x01
  73:../Bootloader/LPCUSB/msc_bot.c **** #define STATUS_PHASE_ERR    0x02
  74:../Bootloader/LPCUSB/msc_bot.c **** 
  75:../Bootloader/LPCUSB/msc_bot.c **** static U32          dwTransferSize;     // total size of data transfer
  76:../Bootloader/LPCUSB/msc_bot.c **** static U32          dwOffset;           // offset in current data transfer
  77:../Bootloader/LPCUSB/msc_bot.c **** 
  78:../Bootloader/LPCUSB/msc_bot.c **** static TCBW         CBW;
  79:../Bootloader/LPCUSB/msc_bot.c **** static TCSW         CSW;
  80:../Bootloader/LPCUSB/msc_bot.c **** 
  81:../Bootloader/LPCUSB/msc_bot.c **** static EBotState    eState;
  82:../Bootloader/LPCUSB/msc_bot.c **** 
  83:../Bootloader/LPCUSB/msc_bot.c **** static U8           *pbData;
  84:../Bootloader/LPCUSB/msc_bot.c **** 
  85:../Bootloader/LPCUSB/msc_bot.c **** 
  86:../Bootloader/LPCUSB/msc_bot.c **** 
  87:../Bootloader/LPCUSB/msc_bot.c **** void MSCBotReset(void)
  88:../Bootloader/LPCUSB/msc_bot.c **** {
  16              		.loc 1 88 0
  17              		@ Function supports interworking.
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              	.LVL0:
  89:../Bootloader/LPCUSB/msc_bot.c ****     DBG("BOT reset in state %d\n", eState);
  90:../Bootloader/LPCUSB/msc_bot.c ****     // reset BOT state
  91:../Bootloader/LPCUSB/msc_bot.c ****     eState = eCBW;
  21              		.loc 1 91 0
  22 0000 14309FE5 		ldr	r3, .L3
  23 0004 0020A0E3 		mov	r2, #0
  24              		.loc 1 88 0
  25 0008 04E02DE5 		str	lr, [sp, #-4]!
  26              	.LCFI0:
  27              		.loc 1 91 0
  28 000c 002083E5 		str	r2, [r3, #0]
  92:../Bootloader/LPCUSB/msc_bot.c ****     // reset SCSI
  93:../Bootloader/LPCUSB/msc_bot.c ****     SCSIReset();
  29              		.loc 1 93 0
  30 0010 FEFFFFEB 		bl	SCSIReset
  94:../Bootloader/LPCUSB/msc_bot.c **** }
  31              		.loc 1 94 0
  32 0014 04E09DE4 		ldr	lr, [sp], #4
  33 0018 1EFF2FE1 		bx	lr
  34              	.L4:
  35              		.align	2
  36              	.L3:
  37 001c 04000000 		.word	eState
  38              	.LFE2:
  40              		.align	2
  42              	SendCSW:
  43              	.LFB3:
  95:../Bootloader/LPCUSB/msc_bot.c **** 
  96:../Bootloader/LPCUSB/msc_bot.c **** 
  97:../Bootloader/LPCUSB/msc_bot.c **** static void SendCSW(U8 bStatus)
  98:../Bootloader/LPCUSB/msc_bot.c **** {
  44              		.loc 1 98 0
  45              		@ Function supports interworking.
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49              	.LVL1:
  99:../Bootloader/LPCUSB/msc_bot.c ****     int iResidue;
 100:../Bootloader/LPCUSB/msc_bot.c **** 
 101:../Bootloader/LPCUSB/msc_bot.c ****     iResidue = CBW.dwCBWDataTransferLength - dwTransferSize;
  50              		.loc 1 101 0
  51 0020 3C209FE5 		ldr	r2, .L7
  52 0024 3C309FE5 		ldr	r3, .L7+4
  53 0028 081092E5 		ldr	r1, [r2, #8]
  54 002c 003093E5 		ldr	r3, [r3, #0]
 102:../Bootloader/LPCUSB/msc_bot.c **** 
 103:../Bootloader/LPCUSB/msc_bot.c ****     // construct CSW
 104:../Bootloader/LPCUSB/msc_bot.c ****     CSW.dwCSWSignature      = CSW_SIGNATURE;
 105:../Bootloader/LPCUSB/msc_bot.c ****     CSW.dwCSWTag            = CBW.dwCBWTag;
  55              		.loc 1 105 0
  56 0030 04C092E5 		ldr	ip, [r2, #4]
  57              		.loc 1 104 0
  58 0034 30209FE5 		ldr	r2, .L7+8
  59              		.loc 1 101 0
  60 0038 011063E0 		rsb	r1, r3, r1
  61              	.LVL2:
 106:../Bootloader/LPCUSB/msc_bot.c ****     CSW.dwCSWDataResidue    = MAX(iResidue, 0);
 107:../Bootloader/LPCUSB/msc_bot.c ****     CSW.bmCSWStatus         = bStatus;
 108:../Bootloader/LPCUSB/msc_bot.c **** 
 109:../Bootloader/LPCUSB/msc_bot.c ****     DBG("CSW: status=%x, residue=%d\n", bStatus, CSW.dwCSWDataResidue);
 110:../Bootloader/LPCUSB/msc_bot.c **** 
 111:../Bootloader/LPCUSB/msc_bot.c ****     // next state
 112:../Bootloader/LPCUSB/msc_bot.c ****     eState = eCSW;
  62              		.loc 1 112 0
  63 003c 2C309FE5 		ldr	r3, .L7+12
  64              		.loc 1 107 0
  65 0040 0C00C2E5 		strb	r0, [r2, #12]
  66              		.loc 1 112 0
  67 0044 0300A0E3 		mov	r0, #3
  68              	.LVL3:
  69 0048 000083E5 		str	r0, [r3, #0]
  70              		.loc 1 104 0
  71 004c 20309FE5 		ldr	r3, .L7+16
  72              		.loc 1 106 0
  73 0050 000051E3 		cmp	r1, #0
  74 0054 0010A0B3 		movlt	r1, #0
  75              	.LVL4:
  76              		.loc 1 98 0
  77              		@ lr needed for prologue
  78              		.loc 1 104 0
  79 0058 081082E8 		stmia	r2, {r3, ip}	@ phole stm
  80              		.loc 1 106 0
  81 005c 081082E5 		str	r1, [r2, #8]
 113:../Bootloader/LPCUSB/msc_bot.c **** }
  82              		.loc 1 113 0
  83 0060 1EFF2FE1 		bx	lr
  84              	.L8:
  85              		.align	2
  86              	.L7:
  87 0064 18000000 		.word	CBW
  88 0068 3C000000 		.word	dwTransferSize
  89 006c 08000000 		.word	CSW
  90 0070 04000000 		.word	eState
  91 0074 55534253 		.word	1396855637
  92              	.LFE3:
  94              		.align	2
  96              	BOTStall:
  97              	.LFB5:
 114:../Bootloader/LPCUSB/msc_bot.c **** 
 115:../Bootloader/LPCUSB/msc_bot.c **** 
 116:../Bootloader/LPCUSB/msc_bot.c **** /*************************************************************************
 117:../Bootloader/LPCUSB/msc_bot.c ****     CheckCBW
 118:../Bootloader/LPCUSB/msc_bot.c ****     ========
 119:../Bootloader/LPCUSB/msc_bot.c ****         Checks if CBW is valid and meaningful
 120:../Bootloader/LPCUSB/msc_bot.c **** 
 121:../Bootloader/LPCUSB/msc_bot.c ****     IN      pCBW    Command block wrapper
 122:../Bootloader/LPCUSB/msc_bot.c ****             iLen    Length of CBW
 123:../Bootloader/LPCUSB/msc_bot.c **** 
 124:../Bootloader/LPCUSB/msc_bot.c ****     Returns TRUE if valid and meaningful
 125:../Bootloader/LPCUSB/msc_bot.c **** **************************************************************************/
 126:../Bootloader/LPCUSB/msc_bot.c **** static BOOL CheckCBW(TCBW *pCBW, int iLen)
 127:../Bootloader/LPCUSB/msc_bot.c **** {
 128:../Bootloader/LPCUSB/msc_bot.c ****     // CBW valid?
 129:../Bootloader/LPCUSB/msc_bot.c ****     if (iLen != 31)
 130:../Bootloader/LPCUSB/msc_bot.c ****     {
 131:../Bootloader/LPCUSB/msc_bot.c ****         DBG("Invalid length (%d)\n", iLen);
 132:../Bootloader/LPCUSB/msc_bot.c ****         return FALSE;
 133:../Bootloader/LPCUSB/msc_bot.c ****     }
 134:../Bootloader/LPCUSB/msc_bot.c ****     if (pCBW->dwCBWSignature != CBW_SIGNATURE)
 135:../Bootloader/LPCUSB/msc_bot.c ****     {
 136:../Bootloader/LPCUSB/msc_bot.c ****         DBG("Invalid signature %x\n", pCBW->dwCBWSignature);
 137:../Bootloader/LPCUSB/msc_bot.c ****         return FALSE;
 138:../Bootloader/LPCUSB/msc_bot.c ****     }
 139:../Bootloader/LPCUSB/msc_bot.c **** 
 140:../Bootloader/LPCUSB/msc_bot.c ****     // CBW meaningful?
 141:../Bootloader/LPCUSB/msc_bot.c ****     if (pCBW->bCBWLun != 0)
 142:../Bootloader/LPCUSB/msc_bot.c ****     {
 143:../Bootloader/LPCUSB/msc_bot.c ****         DBG("Invalid LUN %d\n", pCBW->bCBWLun);
 144:../Bootloader/LPCUSB/msc_bot.c ****         return FALSE;
 145:../Bootloader/LPCUSB/msc_bot.c ****     }
 146:../Bootloader/LPCUSB/msc_bot.c ****     if ((pCBW->bCBWCBLength < 1) || (pCBW->bCBWCBLength > 16))
 147:../Bootloader/LPCUSB/msc_bot.c ****     {
 148:../Bootloader/LPCUSB/msc_bot.c ****         DBG("Invalid CB len %d\n", pCBW->bCBWCBLength);
 149:../Bootloader/LPCUSB/msc_bot.c ****         return FALSE;
 150:../Bootloader/LPCUSB/msc_bot.c ****     }
 151:../Bootloader/LPCUSB/msc_bot.c ****     return TRUE;
 152:../Bootloader/LPCUSB/msc_bot.c **** }
 153:../Bootloader/LPCUSB/msc_bot.c **** 
 154:../Bootloader/LPCUSB/msc_bot.c **** 
 155:../Bootloader/LPCUSB/msc_bot.c **** /*************************************************************************
 156:../Bootloader/LPCUSB/msc_bot.c ****     BOTStall
 157:../Bootloader/LPCUSB/msc_bot.c ****     ========
 158:../Bootloader/LPCUSB/msc_bot.c ****         Local function to stall ongoing transfer
 159:../Bootloader/LPCUSB/msc_bot.c **** 
 160:../Bootloader/LPCUSB/msc_bot.c ****     Which endpoint to stall is determined by looking at the transfer
 161:../Bootloader/LPCUSB/msc_bot.c ****     direction intended by the host.
 162:../Bootloader/LPCUSB/msc_bot.c **** 
 163:../Bootloader/LPCUSB/msc_bot.c **** **************************************************************************/
 164:../Bootloader/LPCUSB/msc_bot.c **** static void BOTStall(void)
 165:../Bootloader/LPCUSB/msc_bot.c **** {
  98              		.loc 1 165 0
  99              		@ Function supports interworking.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL5:
 103 0078 04E02DE5 		str	lr, [sp, #-4]!
 104              	.LCFI1:
 166:../Bootloader/LPCUSB/msc_bot.c ****     if ((CBW.bmCBWFlags & 0x80) || (CBW.dwCBWDataTransferLength == 0))
 105              		.loc 1 166 0
 106 007c 2C209FE5 		ldr	r2, .L16
 107 0080 DC30D2E1 		ldrsb	r3, [r2, #12]
 108 0084 000053E3 		cmp	r3, #0
 167:../Bootloader/LPCUSB/msc_bot.c ****     {
 168:../Bootloader/LPCUSB/msc_bot.c ****         // stall data-in or CSW
 169:../Bootloader/LPCUSB/msc_bot.c ****         USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 109              		.loc 1 169 0
 110 0088 8500A0E3 		mov	r0, #133
 111 008c 0110A0E3 		mov	r1, #1
 112              		.loc 1 166 0
 113 0090 270000BA 		blt	.L15
 114 0094 083092E5 		ldr	r3, [r2, #8]
 115 0098 000053E3 		cmp	r3, #0
 170:../Bootloader/LPCUSB/msc_bot.c ****     }
 171:../Bootloader/LPCUSB/msc_bot.c ****     else
 172:../Bootloader/LPCUSB/msc_bot.c ****     {
 173:../Bootloader/LPCUSB/msc_bot.c ****         // stall data-out
 174:../Bootloader/LPCUSB/msc_bot.c ****         USBHwEPStall(MSC_BULK_OUT_EP, TRUE);
 116              		.loc 1 174 0
 117 009c 0200A013 		movne	r0, #2
 118 00a0 0110A013 		movne	r1, #1
 119              	.L15:
 120 00a4 FEFFFFEB 		bl	USBHwEPStall
 175:../Bootloader/LPCUSB/msc_bot.c ****     }
 176:../Bootloader/LPCUSB/msc_bot.c **** }
 121              		.loc 1 176 0
 122 00a8 04E09DE4 		ldr	lr, [sp], #4
 123 00ac 1EFF2FE1 		bx	lr
 124              	.L17:
 125              		.align	2
 126              	.L16:
 127 00b0 18000000 		.word	CBW
 128              	.LFE5:
 130              		.align	2
 132              	HandleDataIn:
 133              	.LFB6:
 177:../Bootloader/LPCUSB/msc_bot.c **** 
 178:../Bootloader/LPCUSB/msc_bot.c **** 
 179:../Bootloader/LPCUSB/msc_bot.c **** /*************************************************************************
 180:../Bootloader/LPCUSB/msc_bot.c ****     HandleDataIn
 181:../Bootloader/LPCUSB/msc_bot.c ****     ============
 182:../Bootloader/LPCUSB/msc_bot.c ****         Handles data from device-to-host
 183:../Bootloader/LPCUSB/msc_bot.c **** 
 184:../Bootloader/LPCUSB/msc_bot.c **** **************************************************************************/
 185:../Bootloader/LPCUSB/msc_bot.c **** static void HandleDataIn(void)
 186:../Bootloader/LPCUSB/msc_bot.c **** {
 134              		.loc 1 186 0
 135              		@ Function supports interworking.
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL6:
 139 00b4 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 140              	.LCFI2:
 187:../Bootloader/LPCUSB/msc_bot.c ****     int iChunk;
 188:../Bootloader/LPCUSB/msc_bot.c **** 
 189:../Bootloader/LPCUSB/msc_bot.c ****     // process data for host in SCSI layer
 190:../Bootloader/LPCUSB/msc_bot.c ****     pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 141              		.loc 1 190 0
 142 00b8 9C609FE5 		ldr	r6, .L29
 143 00bc 9C409FE5 		ldr	r4, .L29+4
 144 00c0 9C509FE5 		ldr	r5, .L29+8
 145 00c4 0E10D6E5 		ldrb	r1, [r6, #14]	@ zero_extendqisi2
 146 00c8 002094E5 		ldr	r2, [r4, #0]
 147 00cc 003095E5 		ldr	r3, [r5, #0]
 148 00d0 0F0086E2 		add	r0, r6, #15
 149 00d4 FEFFFFEB 		bl	SCSIHandleData
 191:../Bootloader/LPCUSB/msc_bot.c ****     if (pbData == NULL)
 150              		.loc 1 191 0
 151 00d8 000050E3 		cmp	r0, #0
 192:../Bootloader/LPCUSB/msc_bot.c ****     {
 193:../Bootloader/LPCUSB/msc_bot.c ****         BOTStall();
 194:../Bootloader/LPCUSB/msc_bot.c ****         SendCSW(STATUS_FAILED);
 195:../Bootloader/LPCUSB/msc_bot.c ****         return;
 196:../Bootloader/LPCUSB/msc_bot.c ****     }
 197:../Bootloader/LPCUSB/msc_bot.c **** 
 198:../Bootloader/LPCUSB/msc_bot.c ****     // send data to host?
 199:../Bootloader/LPCUSB/msc_bot.c ****     if (dwOffset < dwTransferSize)
 152              		.loc 1 199 0
 153 00dc 84709FE5 		ldr	r7, .L29+12
 154              		.loc 1 190 0
 155 00e0 000084E5 		str	r0, [r4, #0]
 156              		.loc 1 191 0
 157 00e4 3B00001A 		bne	.L19
 158              		.loc 1 193 0
 159 00e8 1C0000EB 		bl	BOTStall
 160              		.loc 1 194 0
 161 00ec 0100A0E3 		mov	r0, #1
 162 00f0 510000EA 		b	.L28
 163              	.L19:
 164              		.loc 1 199 0
 165 00f4 002095E5 		ldr	r2, [r5, #0]
 166 00f8 003097E5 		ldr	r3, [r7, #0]
 167 00fc 030052E1 		cmp	r2, r3
 200:../Bootloader/LPCUSB/msc_bot.c ****     {
 201:../Bootloader/LPCUSB/msc_bot.c ****         iChunk = MIN(64, dwTransferSize - dwOffset);
 202:../Bootloader/LPCUSB/msc_bot.c ****         USBHwEPWrite(MSC_BULK_IN_EP, pbData, iChunk);
 168              		.loc 1 202 0
 169 0100 0010A0E1 		mov	r1, r0
 170              		.loc 1 201 0
 171 0104 034062E0 		rsb	r4, r2, r3
 172              	.LVL7:
 173              		.loc 1 202 0
 174 0108 8500A0E3 		mov	r0, #133
 175              		.loc 1 199 0
 176 010c 4900002A 		bcs	.L21
 177              		.loc 1 201 0
 178 0110 400054E3 		cmp	r4, #64
 179 0114 4040A023 		movcs	r4, #64
 180              		.loc 1 202 0
 181 0118 0420A0E1 		mov	r2, r4
 182 011c FEFFFFEB 		bl	USBHwEPWrite
 203:../Bootloader/LPCUSB/msc_bot.c ****         dwOffset += iChunk;
 183              		.loc 1 203 0
 184 0120 003095E5 		ldr	r3, [r5, #0]
 185 0124 043083E0 		add	r3, r3, r4
 186 0128 003085E5 		str	r3, [r5, #0]
 187              	.L21:
 204:../Bootloader/LPCUSB/msc_bot.c ****     }
 205:../Bootloader/LPCUSB/msc_bot.c **** 
 206:../Bootloader/LPCUSB/msc_bot.c ****     // are we done now?
 207:../Bootloader/LPCUSB/msc_bot.c ****     if (dwOffset == dwTransferSize)
 188              		.loc 1 207 0
 189 012c 002095E5 		ldr	r2, [r5, #0]
 190 0130 003097E5 		ldr	r3, [r7, #0]
 191 0134 030052E1 		cmp	r2, r3
 192 0138 5300001A 		bne	.L27
 208:../Bootloader/LPCUSB/msc_bot.c ****     {
 209:../Bootloader/LPCUSB/msc_bot.c ****         if (dwOffset != CBW.dwCBWDataTransferLength)
 193              		.loc 1 209 0
 194 013c 083096E5 		ldr	r3, [r6, #8]
 195 0140 030052E1 		cmp	r2, r3
 210:../Bootloader/LPCUSB/msc_bot.c ****         {
 211:../Bootloader/LPCUSB/msc_bot.c ****             // stall pipe
 212:../Bootloader/LPCUSB/msc_bot.c ****             DBG("stalling DIN");
 213:../Bootloader/LPCUSB/msc_bot.c ****             BOTStall();
 196              		.loc 1 213 0
 197 0144 1C00001B 		blne	BOTStall
 198              	.L25:
 214:../Bootloader/LPCUSB/msc_bot.c ****         }
 215:../Bootloader/LPCUSB/msc_bot.c ****         // done
 216:../Bootloader/LPCUSB/msc_bot.c ****         SendCSW(STATUS_PASSED);
 199              		.loc 1 216 0
 200 0148 0000A0E3 		mov	r0, #0
 201              	.L28:
 217:../Bootloader/LPCUSB/msc_bot.c ****     }
 218:../Bootloader/LPCUSB/msc_bot.c **** }
 202              		.loc 1 218 0
 203 014c F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 204              		.loc 1 216 0
 205 0150 060000EA 		b	SendCSW
 206              	.L27:
 207              		.loc 1 218 0
 208 0154 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 209 0158 1EFF2FE1 		bx	lr
 210              	.L30:
 211              		.align	2
 212              	.L29:
 213 015c 18000000 		.word	CBW
 214 0160 00000000 		.word	pbData
 215 0164 38000000 		.word	dwOffset
 216 0168 3C000000 		.word	dwTransferSize
 217              	.LFE6:
 219              		.align	2
 220              		.global	MSCBotBulkOut
 222              	MSCBotBulkOut:
 223              	.LFB8:
 219:../Bootloader/LPCUSB/msc_bot.c **** 
 220:../Bootloader/LPCUSB/msc_bot.c **** 
 221:../Bootloader/LPCUSB/msc_bot.c **** /*************************************************************************
 222:../Bootloader/LPCUSB/msc_bot.c ****     HandleDataOut
 223:../Bootloader/LPCUSB/msc_bot.c ****     =============
 224:../Bootloader/LPCUSB/msc_bot.c ****         Handles data from host-to-device
 225:../Bootloader/LPCUSB/msc_bot.c **** 
 226:../Bootloader/LPCUSB/msc_bot.c **** **************************************************************************/
 227:../Bootloader/LPCUSB/msc_bot.c **** static void HandleDataOut(void)
 228:../Bootloader/LPCUSB/msc_bot.c **** {
 229:../Bootloader/LPCUSB/msc_bot.c ****     int iChunk;
 230:../Bootloader/LPCUSB/msc_bot.c **** 
 231:../Bootloader/LPCUSB/msc_bot.c ****     if (dwOffset < dwTransferSize)
 232:../Bootloader/LPCUSB/msc_bot.c ****     {
 233:../Bootloader/LPCUSB/msc_bot.c ****         // get data from host
 234:../Bootloader/LPCUSB/msc_bot.c ****         iChunk = USBHwEPRead(MSC_BULK_OUT_EP, pbData, dwTransferSize - dwOffset);
 235:../Bootloader/LPCUSB/msc_bot.c ****         // process data in SCSI layer
 236:../Bootloader/LPCUSB/msc_bot.c ****         pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 237:../Bootloader/LPCUSB/msc_bot.c ****         if (pbData == NULL)
 238:../Bootloader/LPCUSB/msc_bot.c ****         {
 239:../Bootloader/LPCUSB/msc_bot.c ****             BOTStall();
 240:../Bootloader/LPCUSB/msc_bot.c ****             SendCSW(STATUS_FAILED);
 241:../Bootloader/LPCUSB/msc_bot.c ****             return;
 242:../Bootloader/LPCUSB/msc_bot.c ****         }
 243:../Bootloader/LPCUSB/msc_bot.c ****         dwOffset += iChunk;
 244:../Bootloader/LPCUSB/msc_bot.c ****     }
 245:../Bootloader/LPCUSB/msc_bot.c **** 
 246:../Bootloader/LPCUSB/msc_bot.c ****     // are we done now?
 247:../Bootloader/LPCUSB/msc_bot.c ****     if (dwOffset == dwTransferSize)
 248:../Bootloader/LPCUSB/msc_bot.c ****     {
 249:../Bootloader/LPCUSB/msc_bot.c ****         if (dwOffset != CBW.dwCBWDataTransferLength)
 250:../Bootloader/LPCUSB/msc_bot.c ****         {
 251:../Bootloader/LPCUSB/msc_bot.c ****             // stall pipe
 252:../Bootloader/LPCUSB/msc_bot.c ****             DBG("stalling DOUT");
 253:../Bootloader/LPCUSB/msc_bot.c ****             BOTStall();
 254:../Bootloader/LPCUSB/msc_bot.c ****         }
 255:../Bootloader/LPCUSB/msc_bot.c ****         SendCSW(STATUS_PASSED);
 256:../Bootloader/LPCUSB/msc_bot.c ****     }
 257:../Bootloader/LPCUSB/msc_bot.c **** }
 258:../Bootloader/LPCUSB/msc_bot.c **** 
 259:../Bootloader/LPCUSB/msc_bot.c **** 
 260:../Bootloader/LPCUSB/msc_bot.c **** /*************************************************************************
 261:../Bootloader/LPCUSB/msc_bot.c ****     MSCBotBulkOut
 262:../Bootloader/LPCUSB/msc_bot.c ****     ===============
 263:../Bootloader/LPCUSB/msc_bot.c ****         Handles the BOT bulk OUT endpoint
 264:../Bootloader/LPCUSB/msc_bot.c **** 
 265:../Bootloader/LPCUSB/msc_bot.c ****     IN      bEP         Endpoint number
 266:../Bootloader/LPCUSB/msc_bot.c ****             bEPStatus   Endpoint status (indicates NAK, STALL, etc)
 267:../Bootloader/LPCUSB/msc_bot.c **** 
 268:../Bootloader/LPCUSB/msc_bot.c **** **************************************************************************/
 269:../Bootloader/LPCUSB/msc_bot.c **** void MSCBotBulkOut(U8 bEP, U8 bEPStatus)
 270:../Bootloader/LPCUSB/msc_bot.c **** {
 224              		.loc 1 270 0
 225              		@ Function supports interworking.
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL8:
 229 016c 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 230              	.LCFI3:
 271:../Bootloader/LPCUSB/msc_bot.c ****     int     iLen, iChunk;
 272:../Bootloader/LPCUSB/msc_bot.c ****     BOOL    fHostIn, fDevIn;
 273:../Bootloader/LPCUSB/msc_bot.c **** 
 274:../Bootloader/LPCUSB/msc_bot.c ****     // ignore events on stalled EP
 275:../Bootloader/LPCUSB/msc_bot.c ****     if (bEPStatus & EP_STATUS_STALLED)
 231              		.loc 1 275 0
 232 0170 020011E3 		tst	r1, #2
 233              		.loc 1 270 0
 234 0174 08D04DE2 		sub	sp, sp, #8
 235              	.LCFI4:
 236              	.LVL9:
 237              		.loc 1 270 0
 238 0178 FF0000E2 		and	r0, r0, #255
 239              		.loc 1 275 0
 240 017c E200001A 		bne	.L63
 276:../Bootloader/LPCUSB/msc_bot.c ****     {
 277:../Bootloader/LPCUSB/msc_bot.c ****         return;
 278:../Bootloader/LPCUSB/msc_bot.c ****     }
 279:../Bootloader/LPCUSB/msc_bot.c **** 
 280:../Bootloader/LPCUSB/msc_bot.c ****     switch (eState)
 241              		.loc 1 280 0
 242 0180 14329FE5 		ldr	r3, .L68
 243 0184 003093E5 		ldr	r3, [r3, #0]
 244 0188 040053E3 		cmp	r3, #4
 245 018c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 246 0190 E20000EA 		b	.L63
 247              		.p2align 2
 248              	.L38:
 249 0194 A8010000 		.word	.L34
 250 0198 90020000 		.word	.L35
 251 019c 2C030000 		.word	.L36
 252 01a0 2C030000 		.word	.L36
 253 01a4 48030000 		.word	.L37
 254              	.L34:
 281:../Bootloader/LPCUSB/msc_bot.c ****     {
 282:../Bootloader/LPCUSB/msc_bot.c **** 
 283:../Bootloader/LPCUSB/msc_bot.c ****         case eCBW:
 284:../Bootloader/LPCUSB/msc_bot.c ****             iLen = USBHwEPRead(bEP, (U8 *)&CBW, sizeof(CBW));
 255              		.loc 1 284 0
 256 01a8 F0419FE5 		ldr	r4, .L68+4
 257 01ac 2020A0E3 		mov	r2, #32
 258 01b0 0410A0E1 		mov	r1, r4
 259              	.LVL10:
 260 01b4 FEFFFFEB 		bl	USBHwEPRead
 261              	.LVL11:
 262              	.LBB2:
 263              	.LBB3:
 264              		.loc 1 129 0
 265 01b8 1F0050E3 		cmp	r0, #31
 266              	.LBE3:
 267              	.LBE2:
 268              		.loc 1 284 0
 269 01bc 04008DE5 		str	r0, [sp, #4]
 270              	.LVL12:
 271              	.LBB4:
 272              	.LBB5:
 273              		.loc 1 129 0
 274 01c0 7A00001A 		bne	.L39
 275              		.loc 1 134 0
 276 01c4 002094E5 		ldr	r2, [r4, #0]
 277 01c8 D4319FE5 		ldr	r3, .L68+8
 278 01cc 030052E1 		cmp	r2, r3
 279 01d0 7A00001A 		bne	.L39
 280              		.loc 1 141 0
 281 01d4 0DE0D4E5 		ldrb	lr, [r4, #13]	@ zero_extendqisi2
 282 01d8 00005EE3 		cmp	lr, #0
 283 01dc 7A00001A 		bne	.L39
 284              		.loc 1 146 0
 285 01e0 0E10D4E5 		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 286 01e4 013041E2 		sub	r3, r1, #1
 287 01e8 0F0053E3 		cmp	r3, #15
 288 01ec D400009A 		bls	.L43
 289              	.L39:
 290              	.LBE5:
 291              	.LBE4:
 285:../Bootloader/LPCUSB/msc_bot.c **** 
 286:../Bootloader/LPCUSB/msc_bot.c ****             // check if we got a good CBW
 287:../Bootloader/LPCUSB/msc_bot.c ****             if (!CheckCBW(&CBW, iLen))
 288:../Bootloader/LPCUSB/msc_bot.c ****             {
 289:../Bootloader/LPCUSB/msc_bot.c ****                 // see 6.6.1
 290:../Bootloader/LPCUSB/msc_bot.c ****                 USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 292              		.loc 1 290 0
 293 01f0 8500A0E3 		mov	r0, #133
 294 01f4 0110A0E3 		mov	r1, #1
 295 01f8 FEFFFFEB 		bl	USBHwEPStall
 291:../Bootloader/LPCUSB/msc_bot.c ****                 USBHwEPStall(MSC_BULK_OUT_EP, TRUE);
 296              		.loc 1 291 0
 297 01fc 0200A0E3 		mov	r0, #2
 298 0200 0110A0E3 		mov	r1, #1
 299 0204 FEFFFFEB 		bl	USBHwEPStall
 292:../Bootloader/LPCUSB/msc_bot.c ****                 eState = eStalled;
 300              		.loc 1 292 0
 301 0208 0420A0E3 		mov	r2, #4
 302 020c CD0000EA 		b	.L65
 303              	.L64:
 293:../Bootloader/LPCUSB/msc_bot.c ****                 break;
 294:../Bootloader/LPCUSB/msc_bot.c ****             }
 295:../Bootloader/LPCUSB/msc_bot.c **** 
 296:../Bootloader/LPCUSB/msc_bot.c ****             DBG("CBW: len=%d, flags=%x, cmd=%x, cmdlen=%d\n",
 297:../Bootloader/LPCUSB/msc_bot.c ****                     CBW.dwCBWDataTransferLength, CBW.bmCBWFlags, CBW.CBWCB[0], CBW.bCBWCBLength);
 298:../Bootloader/LPCUSB/msc_bot.c **** 
 299:../Bootloader/LPCUSB/msc_bot.c ****             dwOffset = 0;
 300:../Bootloader/LPCUSB/msc_bot.c ****             dwTransferSize = 0;
 301:../Bootloader/LPCUSB/msc_bot.c ****             fHostIn = ((CBW.bmCBWFlags & 0x80) != 0);
 302:../Bootloader/LPCUSB/msc_bot.c **** 
 303:../Bootloader/LPCUSB/msc_bot.c ****             // verify request
 304:../Bootloader/LPCUSB/msc_bot.c ****             pbData = SCSIHandleCmd(CBW.CBWCB, CBW.bCBWCBLength, &iLen, &fDevIn);
 305:../Bootloader/LPCUSB/msc_bot.c ****             if (pbData == NULL)
 306:../Bootloader/LPCUSB/msc_bot.c ****             {
 307:../Bootloader/LPCUSB/msc_bot.c ****                 // unknown command
 308:../Bootloader/LPCUSB/msc_bot.c ****                 BOTStall();
 309:../Bootloader/LPCUSB/msc_bot.c ****                 SendCSW(STATUS_FAILED);
 310:../Bootloader/LPCUSB/msc_bot.c ****                 break;
 311:../Bootloader/LPCUSB/msc_bot.c ****             }
 312:../Bootloader/LPCUSB/msc_bot.c **** 
 313:../Bootloader/LPCUSB/msc_bot.c ****             // rule: if device and host disagree on direction, send CSW with status 2
 314:../Bootloader/LPCUSB/msc_bot.c ****             if ((iLen > 0) &&
 304              		.loc 1 314 0
 305 0210 04209DE5 		ldr	r2, [sp, #4]
 306 0214 000052E3 		cmp	r2, #0
 307 0218 910000DA 		ble	.L46
 308 021c 800014E3 		tst	r4, #128
 309              	.LVL13:
 310 0220 00309DE5 		ldr	r3, [sp, #0]
 311 0224 8B00000A 		beq	.L48
 312              	.LVL14:
 313 0228 000053E3 		cmp	r3, #0
 314 022c 8D00000A 		beq	.L50
 315 0230 910000EA 		b	.L46
 316              	.L48:
 317 0234 000053E3 		cmp	r3, #0
 318 0238 9100000A 		beq	.L46
 319              	.LVL15:
 320              	.L50:
 315:../Bootloader/LPCUSB/msc_bot.c ****                 ((fHostIn && !fDevIn) ||
 316:../Bootloader/LPCUSB/msc_bot.c ****                 (!fHostIn && fDevIn)))
 317:../Bootloader/LPCUSB/msc_bot.c ****             {
 318:../Bootloader/LPCUSB/msc_bot.c ****                 DBG("Host and device disagree on direction\n");
 319:../Bootloader/LPCUSB/msc_bot.c ****                 BOTStall();
 321              		.loc 1 319 0
 322 023c 1C0000EB 		bl	BOTStall
 320:../Bootloader/LPCUSB/msc_bot.c ****                 SendCSW(STATUS_PHASE_ERR);
 323              		.loc 1 320 0
 324 0240 0200A0E3 		mov	r0, #2
 325              	.LVL16:
 326              	.L66:
 327 0244 060000EB 		bl	SendCSW
 328 0248 E20000EA 		b	.L63
 329              	.LVL17:
 330              	.L46:
 321:../Bootloader/LPCUSB/msc_bot.c ****                 break;
 322:../Bootloader/LPCUSB/msc_bot.c ****             }
 323:../Bootloader/LPCUSB/msc_bot.c **** 
 324:../Bootloader/LPCUSB/msc_bot.c ****             // rule: if D > H, send CSW with status 2
 325:../Bootloader/LPCUSB/msc_bot.c ****             if (iLen > CBW.dwCBWDataTransferLength)
 331              		.loc 1 325 0
 332 024c 4C319FE5 		ldr	r3, .L68+4
 333              	.LVL18:
 334 0250 083093E5 		ldr	r3, [r3, #8]
 335 0254 030052E1 		cmp	r2, r3
 336 0258 8D00008A 		bhi	.L50
 326:../Bootloader/LPCUSB/msc_bot.c ****             {
 327:../Bootloader/LPCUSB/msc_bot.c ****                 DBG("Negative residue\n");
 328:../Bootloader/LPCUSB/msc_bot.c ****                 BOTStall();
 329:../Bootloader/LPCUSB/msc_bot.c ****                 SendCSW(STATUS_PHASE_ERR);
 330:../Bootloader/LPCUSB/msc_bot.c ****                 break;
 331:../Bootloader/LPCUSB/msc_bot.c ****             }
 332:../Bootloader/LPCUSB/msc_bot.c **** 
 333:../Bootloader/LPCUSB/msc_bot.c ****             dwTransferSize = iLen;
 337              		.loc 1 333 0
 338 025c 44319FE5 		ldr	r3, .L68+12
 334:../Bootloader/LPCUSB/msc_bot.c ****             if ((dwTransferSize == 0) || fDevIn)
 339              		.loc 1 334 0
 340 0260 000052E3 		cmp	r2, #0
 341              		.loc 1 333 0
 342 0264 002083E5 		str	r2, [r3, #0]
 343              		.loc 1 334 0
 344 0268 9D00000A 		beq	.L53
 345 026c 00309DE5 		ldr	r3, [sp, #0]
 346 0270 000053E3 		cmp	r3, #0
 335:../Bootloader/LPCUSB/msc_bot.c ****             {
 336:../Bootloader/LPCUSB/msc_bot.c ****                 // data from device-to-host
 337:../Bootloader/LPCUSB/msc_bot.c ****                 eState = eDataIn;
 338:../Bootloader/LPCUSB/msc_bot.c ****                 HandleDataIn();
 339:../Bootloader/LPCUSB/msc_bot.c ****             }
 340:../Bootloader/LPCUSB/msc_bot.c ****             else
 341:../Bootloader/LPCUSB/msc_bot.c ****             {
 342:../Bootloader/LPCUSB/msc_bot.c ****                 // data from host-to-device
 343:../Bootloader/LPCUSB/msc_bot.c ****                 eState = eDataOut;
 347              		.loc 1 343 0
 348 0274 0120A003 		moveq	r2, #1
 349              		.loc 1 334 0
 350 0278 CD00000A 		beq	.L65
 351              	.L53:
 352              		.loc 1 337 0
 353 027c 18319FE5 		ldr	r3, .L68
 354 0280 0220A0E3 		mov	r2, #2
 355 0284 002083E5 		str	r2, [r3, #0]
 356              		.loc 1 338 0
 357 0288 2B0000EB 		bl	HandleDataIn
 358 028c E20000EA 		b	.L63
 359              	.LVL19:
 360              	.L35:
 361              	.LBB6:
 362              	.LBB7:
 363              		.loc 1 231 0
 364 0290 14519FE5 		ldr	r5, .L68+16
 365 0294 0C319FE5 		ldr	r3, .L68+12
 366 0298 001095E5 		ldr	r1, [r5, #0]
 367              	.LVL20:
 368 029c 002093E5 		ldr	r2, [r3, #0]
 369 02a0 020051E1 		cmp	r1, r2
 370 02a4 BD00002A 		bcs	.L56
 371              		.loc 1 234 0
 372 02a8 00419FE5 		ldr	r4, .L68+20
 373 02ac 022061E0 		rsb	r2, r1, r2
 374 02b0 0200A0E3 		mov	r0, #2
 375              	.LVL21:
 376 02b4 001094E5 		ldr	r1, [r4, #0]
 377 02b8 FEFFFFEB 		bl	USBHwEPRead
 378 02bc 0060A0E1 		mov	r6, r0
 379              	.LVL22:
 380              		.loc 1 236 0
 381 02c0 D8009FE5 		ldr	r0, .L68+4
 382 02c4 003095E5 		ldr	r3, [r5, #0]
 383 02c8 0E10D0E5 		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 384 02cc 002094E5 		ldr	r2, [r4, #0]
 385 02d0 0F0080E2 		add	r0, r0, #15
 386 02d4 FEFFFFEB 		bl	SCSIHandleData
 387              		.loc 1 237 0
 388 02d8 000050E3 		cmp	r0, #0
 389              		.loc 1 243 0
 390 02dc 00309515 		ldrne	r3, [r5, #0]
 391 02e0 06308310 		addne	r3, r3, r6
 392              		.loc 1 236 0
 393 02e4 000084E5 		str	r0, [r4, #0]
 394              		.loc 1 243 0
 395 02e8 00308515 		strne	r3, [r5, #0]
 396              		.loc 1 237 0
 397 02ec BD00001A 		bne	.L56
 398              	.LVL23:
 399              	.L67:
 400              		.loc 1 239 0
 401 02f0 1C0000EB 		bl	BOTStall
 402              		.loc 1 240 0
 403 02f4 0100A0E3 		mov	r0, #1
 404 02f8 8F0000EA 		b	.L66
 405              	.LVL24:
 406              	.L56:
 407              		.loc 1 247 0
 408 02fc A8309FE5 		ldr	r3, .L68+16
 409 0300 002093E5 		ldr	r2, [r3, #0]
 410 0304 9C309FE5 		ldr	r3, .L68+12
 411 0308 003093E5 		ldr	r3, [r3, #0]
 412 030c 030052E1 		cmp	r2, r3
 413 0310 E200001A 		bne	.L63
 414              		.loc 1 249 0
 415 0314 84309FE5 		ldr	r3, .L68+4
 416 0318 083093E5 		ldr	r3, [r3, #8]
 417 031c 030052E1 		cmp	r2, r3
 418              		.loc 1 253 0
 419 0320 1C00001B 		blne	BOTStall
 420              	.LVL25:
 421              	.L61:
 422              		.loc 1 255 0
 423 0324 0000A0E3 		mov	r0, #0
 424              	.LVL26:
 425 0328 8F0000EA 		b	.L66
 426              	.LVL27:
 427              	.L36:
 428              	.LBE7:
 429              	.LBE6:
 344:../Bootloader/LPCUSB/msc_bot.c ****             }
 345:../Bootloader/LPCUSB/msc_bot.c ****             break;
 346:../Bootloader/LPCUSB/msc_bot.c **** 
 347:../Bootloader/LPCUSB/msc_bot.c ****         case eDataOut:
 348:../Bootloader/LPCUSB/msc_bot.c ****             HandleDataOut();
 349:../Bootloader/LPCUSB/msc_bot.c ****             break;
 350:../Bootloader/LPCUSB/msc_bot.c **** 
 351:../Bootloader/LPCUSB/msc_bot.c ****         case eDataIn:
 352:../Bootloader/LPCUSB/msc_bot.c ****         case eCSW:
 353:../Bootloader/LPCUSB/msc_bot.c ****             iChunk = USBHwEPRead(bEP, NULL, 0);
 430              		.loc 1 353 0
 431 032c 0010A0E3 		mov	r1, #0
 432              	.LVL28:
 433 0330 0120A0E1 		mov	r2, r1
 434 0334 FEFFFFEB 		bl	USBHwEPRead
 435              	.LVL29:
 354:../Bootloader/LPCUSB/msc_bot.c ****             DBG("Phase error in state %d, %d bytes\n", eState, iChunk);
 355:../Bootloader/LPCUSB/msc_bot.c ****             eState = eCBW;
 436              		.loc 1 355 0
 437 0338 0020A0E3 		mov	r2, #0
 438              	.LVL30:
 439              	.L65:
 440 033c 58309FE5 		ldr	r3, .L68
 441              	.LVL31:
 442 0340 002083E5 		str	r2, [r3, #0]
 443 0344 E20000EA 		b	.L63
 444              	.LVL32:
 445              	.L37:
 356:../Bootloader/LPCUSB/msc_bot.c ****             break;
 357:../Bootloader/LPCUSB/msc_bot.c **** 
 358:../Bootloader/LPCUSB/msc_bot.c ****         case eStalled:
 359:../Bootloader/LPCUSB/msc_bot.c ****         // keep stalling
 360:../Bootloader/LPCUSB/msc_bot.c ****             USBHwEPStall(MSC_BULK_OUT_EP, TRUE);
 446              		.loc 1 360 0
 447 0348 0200A0E3 		mov	r0, #2
 448              	.LVL33:
 449 034c 0110A0E3 		mov	r1, #1
 450              	.LVL34:
 451 0350 FEFFFFEB 		bl	USBHwEPStall
 452 0354 E20000EA 		b	.L63
 453              	.LVL35:
 454              	.L43:
 455              		.loc 1 300 0
 456 0358 48C09FE5 		ldr	ip, .L68+12
 457 035c 00E08CE5 		str	lr, [ip, #0]
 458              		.loc 1 299 0
 459 0360 44C09FE5 		ldr	ip, .L68+16
 460              		.loc 1 304 0
 461 0364 0F0084E2 		add	r0, r4, #15
 462 0368 0D30A0E1 		mov	r3, sp
 463 036c 04208DE2 		add	r2, sp, #4
 464              		.loc 1 299 0
 465 0370 00E08CE5 		str	lr, [ip, #0]
 466              		.loc 1 301 0
 467 0374 0C40D4E5 		ldrb	r4, [r4, #12]	@ zero_extendqisi2
 468              		.loc 1 304 0
 469 0378 FEFFFFEB 		bl	SCSIHandleCmd
 470 037c 2C309FE5 		ldr	r3, .L68+20
 471              		.loc 1 305 0
 472 0380 000050E3 		cmp	r0, #0
 473              		.loc 1 304 0
 474 0384 000083E5 		str	r0, [r3, #0]
 475              		.loc 1 305 0
 476 0388 8200001A 		bne	.L64
 477 038c BA0000EA 		b	.L67
 478              	.LVL36:
 479              	.L63:
 361:../Bootloader/LPCUSB/msc_bot.c ****             break;
 362:../Bootloader/LPCUSB/msc_bot.c **** 
 363:../Bootloader/LPCUSB/msc_bot.c ****         default:
 364:../Bootloader/LPCUSB/msc_bot.c ****             DBG("Invalid state %d\n", eState);
 365:../Bootloader/LPCUSB/msc_bot.c **** //            ASSERT(FALSE);
 366:../Bootloader/LPCUSB/msc_bot.c ****             break;
 367:../Bootloader/LPCUSB/msc_bot.c ****     }
 368:../Bootloader/LPCUSB/msc_bot.c **** }
 480              		.loc 1 368 0
 481 0390 08D08DE2 		add	sp, sp, #8
 482 0394 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 483 0398 1EFF2FE1 		bx	lr
 484              	.L69:
 485              		.align	2
 486              	.L68:
 487 039c 04000000 		.word	eState
 488 03a0 18000000 		.word	CBW
 489 03a4 55534243 		.word	1128420181
 490 03a8 3C000000 		.word	dwTransferSize
 491 03ac 38000000 		.word	dwOffset
 492 03b0 00000000 		.word	pbData
 493              	.LFE8:
 495              		.align	2
 496              		.global	MSCBotBulkIn
 498              	MSCBotBulkIn:
 499              	.LFB9:
 369:../Bootloader/LPCUSB/msc_bot.c **** 
 370:../Bootloader/LPCUSB/msc_bot.c **** 
 371:../Bootloader/LPCUSB/msc_bot.c **** /*************************************************************************
 372:../Bootloader/LPCUSB/msc_bot.c ****     MSCBotBulkIn
 373:../Bootloader/LPCUSB/msc_bot.c ****     ============
 374:../Bootloader/LPCUSB/msc_bot.c ****         Handles the BOT bulk IN endpoint
 375:../Bootloader/LPCUSB/msc_bot.c **** 
 376:../Bootloader/LPCUSB/msc_bot.c ****     IN      bEP         Endpoint number
 377:../Bootloader/LPCUSB/msc_bot.c ****             bEPStatus   Endpoint status (indicates NAK, STALL, etc)
 378:../Bootloader/LPCUSB/msc_bot.c **** 
 379:../Bootloader/LPCUSB/msc_bot.c **** **************************************************************************/
 380:../Bootloader/LPCUSB/msc_bot.c **** void MSCBotBulkIn(U8 bEP, U8 bEPStatus)
 381:../Bootloader/LPCUSB/msc_bot.c **** {
 500              		.loc 1 381 0
 501              		@ Function supports interworking.
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL37:
 505 03b4 30402DE9 		stmfd	sp!, {r4, r5, lr}
 506              	.LCFI5:
 382:../Bootloader/LPCUSB/msc_bot.c ****     // ignore events on stalled EP
 383:../Bootloader/LPCUSB/msc_bot.c ****     if (bEPStatus & EP_STATUS_STALLED)
 507              		.loc 1 383 0
 508 03b8 024011E2 		ands	r4, r1, #2
 384:../Bootloader/LPCUSB/msc_bot.c ****     {
 385:../Bootloader/LPCUSB/msc_bot.c ****         return;
 386:../Bootloader/LPCUSB/msc_bot.c ****     }
 387:../Bootloader/LPCUSB/msc_bot.c **** 
 388:../Bootloader/LPCUSB/msc_bot.c ****     switch (eState)
 509              		.loc 1 388 0
 510 03bc 4C509FE5 		ldr	r5, .L77
 511              		.loc 1 383 0
 512 03c0 0001001A 		bne	.L76
 513              		.loc 1 388 0
 514 03c4 003095E5 		ldr	r3, [r5, #0]
 515 03c8 030053E3 		cmp	r3, #3
 389:../Bootloader/LPCUSB/msc_bot.c ****     {
 390:../Bootloader/LPCUSB/msc_bot.c **** 
 391:../Bootloader/LPCUSB/msc_bot.c ****         case eCBW:
 392:../Bootloader/LPCUSB/msc_bot.c ****         case eDataOut:
 393:../Bootloader/LPCUSB/msc_bot.c ****         // ignore possibly old ACKs
 394:../Bootloader/LPCUSB/msc_bot.c ****             break;
 395:../Bootloader/LPCUSB/msc_bot.c **** 
 396:../Bootloader/LPCUSB/msc_bot.c ****         case eDataIn:
 397:../Bootloader/LPCUSB/msc_bot.c ****             HandleDataIn();
 398:../Bootloader/LPCUSB/msc_bot.c ****             break;
 399:../Bootloader/LPCUSB/msc_bot.c **** 
 400:../Bootloader/LPCUSB/msc_bot.c ****         case eCSW:
 401:../Bootloader/LPCUSB/msc_bot.c ****         // wait for an IN token, then send the CSW
 402:../Bootloader/LPCUSB/msc_bot.c ****             USBHwEPWrite(MSC_BULK_IN_EP, (U8 *)&CSW, 13);
 516              		.loc 1 402 0
 517 03cc 8500A0E3 		mov	r0, #133
 518              	.LVL38:
 519 03d0 3C109FE5 		ldr	r1, .L77+4
 520              	.LVL39:
 521 03d4 0D20A0E3 		mov	r2, #13
 522              		.loc 1 388 0
 523 03d8 FC00000A 		beq	.L74
 524 03dc 040053E3 		cmp	r3, #4
 403:../Bootloader/LPCUSB/msc_bot.c ****             eState = eCBW;
 404:../Bootloader/LPCUSB/msc_bot.c ****             break;
 405:../Bootloader/LPCUSB/msc_bot.c **** 
 406:../Bootloader/LPCUSB/msc_bot.c ****         case eStalled:
 407:../Bootloader/LPCUSB/msc_bot.c ****         // keep stalling
 408:../Bootloader/LPCUSB/msc_bot.c ****             USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 525              		.loc 1 408 0
 526 03e0 0110A0E3 		mov	r1, #1
 527              		.loc 1 388 0
 528 03e4 FF00000A 		beq	.L75
 529 03e8 020053E3 		cmp	r3, #2
 530 03ec 0001001A 		bne	.L76
 409:../Bootloader/LPCUSB/msc_bot.c ****             break;
 410:../Bootloader/LPCUSB/msc_bot.c **** 
 411:../Bootloader/LPCUSB/msc_bot.c ****         default:
 412:../Bootloader/LPCUSB/msc_bot.c ****             DBG("Invalid state %d\n", eState);
 413:../Bootloader/LPCUSB/msc_bot.c **** //            ASSERT(FALSE);
 414:../Bootloader/LPCUSB/msc_bot.c ****             break;
 415:../Bootloader/LPCUSB/msc_bot.c ****     }
 416:../Bootloader/LPCUSB/msc_bot.c **** }
 531              		.loc 1 416 0
 532 03f0 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 533              		.loc 1 397 0
 534 03f4 2B0000EA 		b	HandleDataIn
 535              	.L74:
 536              		.loc 1 402 0
 537 03f8 FEFFFFEB 		bl	USBHwEPWrite
 538              		.loc 1 403 0
 539 03fc 004085E5 		str	r4, [r5, #0]
 540 0400 000100EA 		b	.L76
 541              	.L75:
 542              		.loc 1 408 0
 543 0404 FEFFFFEB 		bl	USBHwEPStall
 544              	.LVL40:
 545              	.L76:
 546              		.loc 1 416 0
 547 0408 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 548 040c 1EFF2FE1 		bx	lr
 549              	.L78:
 550              		.align	2
 551              	.L77:
 552 0410 04000000 		.word	eState
 553 0414 08000000 		.word	CSW
 554              	.LFE9:
 556              		.bss
 557              		.align	2
 558              	pbData:
 559 0000 00000000 		.space	4
 560              		.align	2
 561              	eState:
 562 0004 00000000 		.space	4
 563              		.align	2
 564              	CSW:
 565 0008 00000000 		.space	16
 565      00000000 
 565      00000000 
 565      00000000 
 566              		.align	2
 567              	CBW:
 568 0018 00000000 		.space	32
 568      00000000 
 568      00000000 
 568      00000000 
 568      00000000 
 569              		.align	2
 570              	dwOffset:
 571 0038 00000000 		.space	4
 572              		.align	2
 573              	dwTransferSize:
 574 003c 00000000 		.space	4
 692              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 msc_bot.c
     /tmp/ccekgp2c.s:13     .text:0000000000000000 MSCBotReset
     /tmp/ccekgp2c.s:22     .text:0000000000000000 $a
     /tmp/ccekgp2c.s:37     .text:000000000000001c $d
     /tmp/ccekgp2c.s:561    .bss:0000000000000004 eState
     /tmp/ccekgp2c.s:42     .text:0000000000000020 SendCSW
     /tmp/ccekgp2c.s:51     .text:0000000000000020 $a
     /tmp/ccekgp2c.s:87     .text:0000000000000064 $d
     /tmp/ccekgp2c.s:567    .bss:0000000000000018 CBW
     /tmp/ccekgp2c.s:573    .bss:000000000000003c dwTransferSize
     /tmp/ccekgp2c.s:564    .bss:0000000000000008 CSW
     /tmp/ccekgp2c.s:96     .text:0000000000000078 BOTStall
     /tmp/ccekgp2c.s:103    .text:0000000000000078 $a
     /tmp/ccekgp2c.s:127    .text:00000000000000b0 $d
     /tmp/ccekgp2c.s:132    .text:00000000000000b4 HandleDataIn
     /tmp/ccekgp2c.s:139    .text:00000000000000b4 $a
     /tmp/ccekgp2c.s:213    .text:000000000000015c $d
     /tmp/ccekgp2c.s:558    .bss:0000000000000000 pbData
     /tmp/ccekgp2c.s:570    .bss:0000000000000038 dwOffset
     /tmp/ccekgp2c.s:222    .text:000000000000016c MSCBotBulkOut
     /tmp/ccekgp2c.s:229    .text:000000000000016c $a
     /tmp/ccekgp2c.s:249    .text:0000000000000194 $d
     /tmp/ccekgp2c.s:256    .text:00000000000001a8 $a
     /tmp/ccekgp2c.s:487    .text:000000000000039c $d
     /tmp/ccekgp2c.s:498    .text:00000000000003b4 MSCBotBulkIn
     /tmp/ccekgp2c.s:505    .text:00000000000003b4 $a
     /tmp/ccekgp2c.s:552    .text:0000000000000410 $d

UNDEFINED SYMBOLS
SCSIReset
USBHwEPStall
SCSIHandleData
USBHwEPWrite
USBHwEPRead
SCSIHandleCmd
